From 723bd80cd6d5044d5dec0e4a36d9dd2d007561c6 Mon Sep 17 00:00:00 2001
From: Chih-Hsuan Yen <yan12125@gmail.com>
Date: Tue, 20 Oct 2020 23:50:09 +0800
Subject: [PATCH] Allow tests to be run together in a pytest session

---
 tests/django/test_oauth1/oauth1_server.py | 10 ++++++++--
 tests/django/test_oauth2/oauth2_server.py |  9 +++++++--
 tests/flask/test_oauth1/oauth1_server.py  |  3 ++-
 tests/flask/test_oauth2/oauth2_server.py  |  4 ++--
 4 files changed, 19 insertions(+), 7 deletions(-)

diff --git a/tests/django/test_oauth1/oauth1_server.py b/tests/django/test_oauth1/oauth1_server.py
index 6e16123..2d2bc42 100644
--- a/tests/django/test_oauth1/oauth1_server.py
+++ b/tests/django/test_oauth1/oauth1_server.py
@@ -5,9 +5,15 @@ from authlib.integrations.django_oauth1 import (
 from .models import Client, TokenCredential
 from ..base import TestCase as _TestCase
 
-os.environ['AUTHLIB_INSECURE_TRANSPORT'] = 'true'
-
 
 class TestCase(_TestCase):
+    def setUp(self):
+        super().setUp()
+        os.environ['AUTHLIB_INSECURE_TRANSPORT'] = 'true'
+
+    def tearDown(self):
+        os.environ.pop('AUTHLIB_INSECURE_TRANSPORT')
+        super().tearDown()
+
     def create_server(self):
         return CacheAuthorizationServer(Client, TokenCredential)
diff --git a/tests/django/test_oauth2/oauth2_server.py b/tests/django/test_oauth2/oauth2_server.py
index 6dee878..ee35c0c 100644
--- a/tests/django/test_oauth2/oauth2_server.py
+++ b/tests/django/test_oauth2/oauth2_server.py
@@ -6,10 +6,15 @@ from .models import Client, OAuth2Token
 from ..base import TestCase as _TestCase
 
 
-os.environ['AUTHLIB_INSECURE_TRANSPORT'] = 'true'
+class TestCase(_TestCase):
+    def setUp(self):
+        super().setUp()
+        os.environ['AUTHLIB_INSECURE_TRANSPORT'] = 'true'
 
+    def tearDown(self):
+        super().tearDown()
+        os.environ.pop('AUTHLIB_INSECURE_TRANSPORT')
 
-class TestCase(_TestCase):
     def create_server(self):
         return AuthorizationServer(Client, OAuth2Token)
 
diff --git a/tests/flask/test_oauth1/oauth1_server.py b/tests/flask/test_oauth1/oauth1_server.py
index 535d47c..0c34c63 100644
--- a/tests/flask/test_oauth1/oauth1_server.py
+++ b/tests/flask/test_oauth1/oauth1_server.py
@@ -24,7 +24,6 @@ from authlib.oauth1.errors import OAuth1Error
 from authlib.common.urls import url_encode
 from tests.util import read_file_path
 from ..cache import SimpleCache
-os.environ['AUTHLIB_INSECURE_TRANSPORT'] = 'true'
 
 
 db = SQLAlchemy()
@@ -157,6 +156,7 @@ def create_flask_app():
 
 class TestCase(unittest.TestCase):
     def setUp(self):
+        os.environ['AUTHLIB_INSECURE_TRANSPORT'] = 'true'
         app = create_flask_app()
 
         self._ctx = app.app_context()
@@ -171,3 +171,4 @@ class TestCase(unittest.TestCase):
     def tearDown(self):
         db.drop_all()
         self._ctx.pop()
+        os.environ.pop('AUTHLIB_INSECURE_TRANSPORT')
diff --git a/tests/flask/test_oauth2/oauth2_server.py b/tests/flask/test_oauth2/oauth2_server.py
index 7b7cdc4..7aca42b 100644
--- a/tests/flask/test_oauth2/oauth2_server.py
+++ b/tests/flask/test_oauth2/oauth2_server.py
@@ -13,8 +13,6 @@ from authlib.integrations.flask_oauth2 import AuthorizationServer
 from authlib.oauth2 import OAuth2Error
 from .models import db, User, Client, Token
 
-os.environ['AUTHLIB_INSECURE_TRANSPORT'] = 'true'
-
 
 def token_generator(client, grant_type, user=None, scope=None):
     token = '{}-{}'.format(client.client_id[0], grant_type)
@@ -76,6 +74,7 @@ def create_flask_app():
 
 class TestCase(unittest.TestCase):
     def setUp(self):
+        os.environ['AUTHLIB_INSECURE_TRANSPORT'] = 'true'
         app = create_flask_app()
 
         self._ctx = app.app_context()
@@ -90,6 +89,7 @@ class TestCase(unittest.TestCase):
     def tearDown(self):
         db.drop_all()
         self._ctx.pop()
+        os.environ.pop('AUTHLIB_INSECURE_TRANSPORT')
 
     def create_basic_header(self, username, password):
         text = '{}:{}'.format(username, password)
-- 
2.34.1

